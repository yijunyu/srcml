<DocConfig title="Java srcML" lang="Java" outputFile="java_srcML.html">

    <Category title="Statements">
        <DocEntry title="if statement" shortTitle="if">
            <Elements>
                <Element name="if" />
                <Subelement name="condition" />
                <Subelement name="then" />
                <Subelement name="else" />
                <Subelement name="elseif" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:if">
                    <Desc>Find all if statements</Desc>
                </XPath>
                <XPath path="//src:if/src:condition">
                    <Desc>Find all conditions of all if statements</Desc>
                </XPath>
                <XPath path="//src:if/src:then">
                    <Desc>Find all then statements</Desc>
                </XPath>
                <XPath path="//src:if/src:else">
                    <Desc>Find all else statements</Desc>
                </XPath>
                <XPath path="//src:if[not(src:else)]">
                    <Desc>Find all if statements without an else statement (this only refers to <code>else</code> and not <code>else if</code>)</Desc>
                </XPath>
                <XPath path="//src:if//src:if">
                    <Desc>Find all nested if statements (include else if)</Desc>
                </XPath>
                <XPath path="//src:elseif">
                    <Desc>Find all else-if statements</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-if-1.c" />
            <Example file="../C/C-if-2.c" />
            <Example file="../C/C-if-3.c" />
            <Example file="../C/C-if-4.c" />
            <Example file="../C/C-if-5.c" />
            <Example file="../C/C-if-6.c" />
        </DocEntry>

        <DocEntry title="while statement" shortTitle="while">
            <Elements>
                <Element name="while" />
                <Subelement name="condition" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:while">
                    <Desc>Find all while loops</Desc>
                </XPath>
                <XPath path="//src:while/src:condition">
                    <Desc>Find the conditions of all while loops</Desc>
                </XPath>
                <XPath path="//src:while[src:condition//src:name = 'i']">
                    <Desc>Find all while loops which have a condition containing the variable <code class="inline">i</code></Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-while-1.c" />
        </DocEntry>

        <DocEntry title="for statement" shortTitle="for">
            <Elements>
                <Element name="for" />
                <Subelement name="control" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:for">
                    <Desc>Find all for loops</Desc>
                </XPath>
                <XPath path="//src:for/src:control/src:init">
                    <Desc>Find all initialization statements from within the control of all for loops</Desc>
                </XPath>
                <XPath path="//src:for[string-length(src:control/src:init/src:decl/src:name) = 1]">
                    <Desc>Find all for loops which declare a variable with a single character name (e.g. <code class="inline">x</code>, <code class="inline">i</code> or <code class="inline">y</code>)</Desc>
                </XPath>
                <XPath path="//src:for[src:control/src:incr/src:expr//node()/following-sibling::src:operator[.= '++']]">
                    <Desc>Find all for loops which use post-increment as part of the increment expression</Desc>
                </XPath>
                <XPath path="//src:for/src:control/src:incr">
                    <Desc>Find the increment expressions from every for loops</Desc>
                </XPath>
                <XPath path="//src:for/src:control/src:condition">
                    <Desc>Find the conditions of all for loops</Desc>
                </XPath>
                <XPath path="//src:for[src:control/src:init/src:expr/src:range]">
                    <Desc>Find all range based for loops</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-for-1.c" />
            <Example file="../C/C-for-2.c" />
            <Example file="../C/C-for-3.c" />
            <Example file="Java-for-1.java" />
        </DocEntry>

        <DocEntry title="do statement" shortTitle="do">
            <Elements>
                <Element name="do" />
                <Subelement name="condition" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:do">
                    <Desc>Find all do-while loops</Desc>
                </XPath>
                <XPath path="//src:do[src:condition//src:name = 'counter']">
                    <Desc>Find all do-while loops which have a condition containing the variable <code class="inline">counter</code></Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-do-while-1.c" />
            <Example file="../C/C-do-while-2.c" />
        </DocEntry>

        <DocEntry shortTitle="break" title="break statement">
            <Elements>
                <Element name="break" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:break">
                    <Desc>Find all break statements</Desc>
                </XPath>
                <XPath path="//src:break[ancestor::src:for]">
                    <Desc>Find all break statements within for loops</Desc>
                </XPath>
                <XPath path="//src:break[src:name[.='exit']]">
                    <Desc>Find all break statements that break to the exit label</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-break.c" />
            <Example file="Java-break.java" />
        </DocEntry>

        <DocEntry title="continue statement" shortTitle="continue">
            <Elements>
                <Element name="continue" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:continue">
                    <Desc>Find all continue statements</Desc>
                </XPath>
                <XPath path="//src:continue[src:name[.='outerloop']]">
                    <Desc>Find all continue statements that branch to the outerloop label</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-continue.c" />
            <Example file="Java-continue.java" />
        </DocEntry>

        <DocEntry title="label statement" shortTitle="label">
            <Elements>
                <Element name="label" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:label">
                    <Desc>Find all labels</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-label.c" />
        </DocEntry>

        <DocEntry title="return statement" shortTitle="return">
            <Elements>
                <Element name="return" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:return">
                    <Desc>Find all return statements</Desc>
                </XPath>
                <XPath path="//src:function[ count(.//src:return) &gt; 1]">
                    <Desc>Find all functions with more then one return</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-return-1.c" />
            <Example file="../C/C-return-2.c" />
        </DocEntry>

        <DocEntry title="switch statement" shortTitle="switch">
            <Elements>
                <Element name="switch" />
                <Subelement name="condition" />
                <Subelement name="case" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:switch">
                    <Desc>Find all switch statements</Desc>
                </XPath>
                <XPath path="//src:switch/src:condition">
                    <Desc>Find all of the conditions of all switch statements</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-switch-1.c" />
            <Example file="../C/C-switch-2.c" />
        </DocEntry>

        <DocEntry title="case statement" shortTitle="case">
            <Elements>
                <Element name="case" />
                <Subelement name="expr" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:case">
                    <Desc>Find all case labels</Desc>
                </XPath>
                <XPath path="//src:case[.//src:name = 'SATURDAY']">
                    <Desc>Find all case labels which use <code class="inline">SATURDAY</code></Desc>
                </XPath>
                <XPath path="//src:switch[src:block/src:case[.//src:name = 'SATURDAY']]">
                    <Desc>Find all switch statements that have a case that uses <code class="inline">SATURDAY</code></Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-case-1.c" />
        </DocEntry>

        <DocEntry title="default statement" shortTitle="default">
            <Elements>
                <Element name="default" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:default">
                    <Desc>Find all default labels</Desc>
                </XPath>
                <XPath path="//src:switch[src:block/src:default]">
                    <Desc>Find all switch statements which have a default label</Desc>
                </XPath>
            </XPathQueries>
            <Example title="default case" file="Java-default.java" />
        </DocEntry>

        <DocEntry title="assert statement" shortTitle="assert">
            <Elements>
                <Element name="assert" />
                <Subelement name="expr" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:assert">
                    <Desc>Find all assert statements</Desc>
                </XPath>
                <XPath path="//src:function[src:block//src:assert]">
                    <Desc>Find all methods with assert statements within them</Desc>
                </XPath>

            </XPathQueries>
            <Example file="Java-assert-1.java" />
        </DocEntry>

        <DocEntry title="block">
            <Elements>
                <Element name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:block">
                    <Desc>Find all blocks</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-compound-block.c" />
        </DocEntry>

        <DocEntry title="empty statement">
            <Elements>
                <Element name="empty_stmt" />
-            </Elements>
            <XPathQueries>
                <XPath path="//src:empty_stmt">
                    <Desc>Find all empty statements</Desc>
                </XPath>
            </XPathQueries>
            <Example file="../C/C-empty-stmt.c" />
        </DocEntry>

    </Category>

    <Category title="Specifiers">
        <DocEntry title="abstract">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier[.='abstract']]">
                    <Desc>Find all abstract classes</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:specifier[.='abstract']]">
                    <Desc>Find all abstract methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-abstract-1.java" />
            <Example file="Java-abstract-2.java" />
        </DocEntry>

        <DocEntry title="default method implementation">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function[src:type/src:specifier[.='default']]">
                    <Desc>Find all methods with default implementations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-default-3.java" />
        </DocEntry>

        <DocEntry title="final">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier[.='final']]">
                    <Desc>Find all final classes</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:specifier[.='final']]">
                    <Desc>Find all final methods</Desc>
                </XPath>
                <XPath path="//src:decl[src:type/src:specifier[.='final']]">
                    <Desc>Find all final variable declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-final-1.java" />
            <Example file="Java-final-2.java" />
            <Example file="Java-final-3.java" />
        </DocEntry>

        <DocEntry title="synchronized">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function[src:type/src:specifier[.='synchronized']]">
                    <Desc>Find all synchronized methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-synchronized-1.java" />
        </DocEntry>


        <DocEntry title="transient">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:decl[src:type/src:specifier[.='transient']]">
                    <Desc>Find all transient variable declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-transient-1.java" />
        </DocEntry>

        <DocEntry title="native">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function_decl[src:type/src:specifier[.='native']]">
                    <Desc>Find all native function declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-native-1.java" />
        </DocEntry>

        <DocEntry title="private">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier[.='private']][ancestor::src:class]">
                    <Desc>Find all private classes</Desc>
                </XPath>
                <XPath path="//src:decl_stmt[src:decl/src:type/src:specifier[.='private']][ancestor::src:class]">
                    <Desc>Find all private member variables of all classes</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:specifier[.='private']]">
                    <Desc>Find all private methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-private-1.java" />
            <Example file="Java-private-2.java" />
            <Example file="Java-private-3.java" />
        </DocEntry>

        <DocEntry title="protected">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier[.='protected']][ancestor::src:class]">
                    <Desc>Find all protected classes</Desc>
                </XPath>
                <XPath path="//src:decl_stmt[src:decl/src:type/src:specifier[.='protected']][ancestor::src:class]">
                    <Desc>Find all protected member variables of all classes</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:specifier[.='protected']]">
                    <Desc>Find all protected methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-protected-1.java" />
            <Example file="Java-protected-2.java" />
            <Example file="Java-protected-3.java" />
        </DocEntry>

        <DocEntry title="public">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier[.='public']]">
                    <Desc>Find all public classes</Desc>
                </XPath>
                <XPath path="//src:decl_stmt[src:decl/src:type/src:specifier[.='public']][ancestor::src:class]">
                    <Desc>Find all public member variables of all classes</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:specifier[.='public']]">
                    <Desc>Find all public methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-public-1.java" />
            <Example file="Java-public-2.java" />
            <Example file="Java-public-3.java" />
        </DocEntry>

        <DocEntry title="static">
            <Elements>
                <Element name="specifier" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function[src:type/src:specifier [.='static']]">
                    <Desc>Find all static methods</Desc>
                </XPath>
                <XPath path="//src:class[src:specifier [.='static']]">
                    <Desc>Find all static classes</Desc>
                </XPath>
                <XPath path="//src:decl[src:type/src:specifier [.='static']]">
                    <Desc>Find all static variables</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-static-1.java" />
            <Example file="Java-static-2.java" />
            <Example file="Java-static-3.java" />
        </DocEntry>

        <DocEntry title="volatile">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:decl[src:type/src:specifier[.='volatile']]">
                    <Desc>Find all volatile variable declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-volatile-1.java" />
        </DocEntry>

        <DocEntry title="strictfp">
            <Elements>
                <Element name="specifier" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:specifier [.='strictfp']]">
                    <Desc>Find all strictfp classes</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-strictfp-1.java" />
        </DocEntry>

    </Category>

    <Category title="Declarations, Definitions and Initializations">
        <DocEntry title="variable declaration and initialization">
            <Elements>
                <Element name="decl_stmt" />
                <Subelement name="decl" />
                <Subelement name="init" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:decl_stmt">
                    <Desc>Find all declaration statements</Desc>
                </XPath>
                <XPath path="//src:decl">
                    <Desc>Find all variable declarations</Desc>
                </XPath>
                <XPath path="//src:decl[src:init]">
                    <Desc>Find all variable declarations which also initialize the variable</Desc>
                </XPath>
                <XPath path="//src:decl[src:name/src:index]">
                    <Desc>Find all array declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-variable-declarations.java" />
            <Example file="Java-variable-decl-2.java" />
            <Example file="Java-variable-decl-3.java" />
            <Example file="Java-variable-decl-4.java" />
            <Example file="Java-variable-decl-5.java" />
        </DocEntry>

        <DocEntry title="method definition">
            <Elements>
                <Element name="function" />
                <Subelement name="type" />
                <Subelement name="name" />
                <Subelement name="parameter_list" />

            </Elements>
            <XPathQueries>
                <XPath path="//src:function">
                    <Desc>Find all method definitions</Desc>
                </XPath>
                <XPath path="//src:function/src:type">
                    <Desc>Find all return types from all method definitions</Desc>
                </XPath>
                <XPath path="//src:function/src:parameter_list/src:parameter">
                    <Desc>Find all parameters from all method definitions</Desc>
                </XPath>
                <XPath path="//src:function[src:parameter_list[count(src:parameter) = 2]]">
                    <Desc>Find all method definitions with only two parameters</Desc>
                </XPath>
                <XPath path="//src:function/src:name">
                    <Desc>Find the names of all method definitions</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-method-decl-1.java" />
            <Example file="Java-method-decl-2.java" />
        </DocEntry>

        <DocEntry title="lambda functions">
            <Elements>
                <Element name="lambda" />
                <Subelement name="parameter_list" />
                <Subelement name="expr" />
                <Subelement name="block" />

            </Elements>
            <XPathQueries>
                <XPath path="//src:lambda">
                    <Desc>Find all lambda functions</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-lambda-1.java" />
            <Example file="Java-lambda-2.java" />
            <Example file="Java-lambda-3.java" />
            <Example file="Java-lambda-4.java" />
            <Example file="Java-lambda-5.java" />
        </DocEntry>

        <DocEntry title="anonymous class">
            <Elements>
                <Element name="class" />
                <Subelement name="super" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[not(src:name)]">
                    <Desc>Find all anonymous classes</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-anonymous-class-1.java" />
        </DocEntry>

    </Category>

    <Category title="Classes, Interfaces, Annotations and Enums">
        <DocEntry title="class definition">
            <Elements>
                <Element name="class" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class">
                    <Desc>Find all classes</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-class.java" />
        </DocEntry>

        <DocEntry title="interface">
            <Elements>
                <Element name="interface"/>
                <Subelement name="name" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:interface">
                    <Desc>Find all interfaces</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-interface-1.java" />
        </DocEntry>

        <DocEntry title="annotation definition">
            <Elements>
                <Element name="annotation_defn"/>
                <Subelement name="name" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:annotation_defn">
                    <Desc>Find all annotation definitions</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-annotation-def-1.java" />
        </DocEntry>

        <DocEntry title="annotation use">
            <Elements>
                <Element name="annotation" />
                <Subelement name="name" />
                <Subelement name="argument_list" />

            </Elements>
            <XPathQueries>
                <XPath path="//src:annotation">
                    <Desc>Find all uses of any annotation</Desc>
                </XPath>
                <XPath path="//src:annotation[src:name='Deprecated']">
                    <Desc>Find all uses of the <code class="inline">@Deprecated</code> annotation</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-annotation-use-1.java" />
            <Example file="Java-annotation-use-2.java" />
        </DocEntry>

        <DocEntry title="enum definition">
            <Elements>
                <Element name="enum" />
                <Subelement name="block" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:enum">
                    <Desc>Find all enums</Desc>
                </XPath>
                <XPath path="//src:enum/src:name">
                    <Desc>Find the names of all enums</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-enum-def-1.java" />
        </DocEntry>

        <DocEntry title="extends">
            <Elements>
                <Element name="extends" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:extends">
                    <Desc>Find all uses of extends</Desc>
                </XPath>
                <XPath path="//src:class[src:super/src:extends/src:name[.='BaseClass']]">
                    <Desc>Find all classes that inherit from <code class="inline">BaseClass</code></Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-extends.java" />
            <!-- <Example file="Java-extends-2.java" /> -->
        </DocEntry>
        
        <DocEntry title="implements">
            <Elements>
                <Element name="implements" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:implements">
                    <Desc>Find all uses of implements</Desc>
                </XPath>
                <XPath path="//src:class[src:super/src:implements/src:name[.='IVehicle']]">
                    <Desc>Find all classes which implement <code class="inline">IVehicle</code></Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-implements-1.java" />
        </DocEntry>

        <DocEntry title="constructor">
            <Elements>
                <Element name="Constructor" />
                <Subelement name="name" />
                <Subelement name="parameter_list" />

            </Elements>
            <XPathQueries>
                <XPath path="//src:constructor">
                    <Desc>Find all constructors</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-ctor-1.java" />
        </DocEntry>

        <DocEntry title="receiver parameter">
            <Elements>
                <Element name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:constructor[src:parameter_list/src:parameter/src:decl/src:name/src:name[.='this']]">
                    <Desc>Find all constructors which have a receiver parameter</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-receiver-parameter-1.java" />
        </DocEntry>

        <DocEntry title="static initialization block">
            <Elements>
                <Element name="static" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:static">
                    <Desc>Find all static initialization blocks</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-static-4.java" />
        </DocEntry>

        <DocEntry title="default annotation property value">
            <Elements>
                <Element name="default" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function_decl[src:default]">
                    <Desc>Find all annotation properties with a default value</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-default-2.java" />
        </DocEntry>
    </Category>

    <Category title="Expressions">
        <DocEntry title="function call">
            <Elements>
                <Element name="call" />
                <Subelement name="name" />
                <Subelement name="argument_list" />

            </Elements>
            <XPathQueries>
                <XPath path="//src:call">
                    <Desc>Find all function calls</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-call.java" />
        </DocEntry>

        <DocEntry title="ternary operator">
            <Elements>
                <Element name="ternary" />
                <Subelement name="condition" />
                <Subelement name="then"/>
                <Subelement name="else"/>
            </Elements>
            <Example file="../C/C-ternary-operator.c"/>
            <XPathQueries>
                <XPath path="//src:ternary">
                    <Desc>Find all uses of the ternary operator</Desc>
                </XPath>
            </XPathQueries>
        </DocEntry>
        
        <DocEntry title="this">
            <Elements>
                <Element name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:name[.='this']">
                    <Desc>Find all uses of this</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-this-1.java" />
            <Example file="Java-this-2.java" />
        </DocEntry>

        <DocEntry title="super">
            <Elements>
                <Element name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:call[src:name[.='super']]">
                    <Desc>Find all calls to a super constructor</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-super.java" />
        </DocEntry>

        <DocEntry title="method reference">
            <Elements>
                <Element name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:expr[src:name/src:operator[.='::'] or src:operator[.='::']]">
                    <Desc>Find all expressions containing a method reference</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-method-ref-1.java" />
            <Example file="Java-method-ref-2.java" />
            <Example file="Java-method-ref-3.java" />
            <Example file="Java-method-ref-4.java" />
        </DocEntry>

	    <OperatorEntry title="pre/post increment" op="++" example="../C/C-Operator-pre_increment.c" />
	    <OperatorEntry title="pre/post decrement" op="--" example="../C/C-Operator-pre_decrement.c" />
	    <OperatorEntry title="unary minus" op="-" example="../C/C-Operator-unary-minus.c" />
	    <OperatorEntry title="unary plus" op="+" example="../C/C-Operator-unary-plus.c" />
	    <OperatorEntry title="logical not" op="!" example="../C/C-Operator-logical-not.c" />
	    <OperatorEntry title="multiplication" op="*" example="../C/C-Operator-multiplication.c" />
	    <OperatorEntry title="division" op="/" example="../C/C-Operator-divide.c" />
	    <OperatorEntry title="modulus" op="%" example="../C/C-Operator-modulus.c" />
	    <OperatorEntry title="addition" op="+" example="../C/C-Operator-addition.c" />
	    <OperatorEntry title="subtraction" op="-" example="../C/C-Operator-subtraction.c" />
	    <OperatorEntry title="left shift" op="&lt;&lt;" example="../C/C-Operator-left-shift.c" />
	    <OperatorEntry title="right shift" op="&gt;&gt;" example="../C/C-Operator-right-shift.c" />
	    <OperatorEntry title="less then" op="&lt;" example="../C/C-Operator-less-then.c" />
	    <OperatorEntry title="greater then" op="&gt;" example="../C/C-Operator-greater-then.c" />
	    <OperatorEntry title="less then or equal to" op="&lt;=" example="../C/C-Operator-less-equal.c" />
	    <OperatorEntry title="greater then or equal to" op="&gt;=" example="../C/C-Operator-greater-equal.c" />
	    <OperatorEntry title="equals" op="==" example="../C/C-Operator-equal.c" />
	    <OperatorEntry title="not equal" op="!=" example="../C/C-Operator-not-equal.c" />
	    <OperatorEntry title="bitwise not" op="~" example="../C/C-Operator-bitwise-not.c" />
	    <OperatorEntry title="bitwise and" op="&amp;" example="../C/C-Operator-bitwise-and.c" />
	    <OperatorEntry title="bitwise xor" op="^" example="../C/C-Operator-bitwise-xor.c" />
	    <OperatorEntry title="bitwise or" op="|" example="../C/C-Operator-bitwise-or.c" />
	    <OperatorEntry title="logical and" op="&amp;&amp;" example="../C/C-Operator-logical-and.c" />
	    <OperatorEntry title="logical or" op="||" example="../C/C-Operator-logical-or.c" />
	    <OperatorEntry title="assignment" op="=" example="../C/C-Operator-assignment.c" />
	    <OperatorEntry title="multiply assign" op="*=" example="../C/C-Operator-multiply-assign.c" />
	    <OperatorEntry title="divide assign" op="/=" example="../C/C-Operator-divide-assign.c" />
	    <OperatorEntry title="modulus assign" op="%=" example="../C/C-Operator-modulus-assign.c" />
	    <OperatorEntry title="add assign" op="+=" example="../C/C-Operator-addition-assign.c" />
	    <OperatorEntry title="subtract assign" op="-=" example="../C/C-Operator-sub-assign.c" />
	    <OperatorEntry title="signed left shift assign" op="&lt;&lt;=" example="../C/C-Operator-left-shift-assign.c" />
	    <OperatorEntry title="signed right shift assign" op="&gt;&gt;=" example="../C/C-Operator-right-shift-assign.c" />
	    <OperatorEntry title="bitwise and assign" op="&amp;=" example="../C/C-Operator-bitwise-and-assign.c" />
	    <OperatorEntry title="bitwise xor assign" op="^=" example="../C/C-Operator-bitwise-xor-assign.c" />
	    <OperatorEntry title="bitwise or assign" op="|=" example="../C/C-Operator-bitwise-or-assign.c" />
        <OperatorEntry title="unsigned right shift" op="&gt;&gt;&gt;" example="Java-unsigned-right-shift.java" />
	    <OperatorEntry title="unsigned right shift assign" op="&gt;&gt;&gt;=" example="Java-unsigned-right-shift.java" />
        <OperatorEntry title="instanceof" op="instanceof" example="Java-Operator-instanceof.java" />
        <OperatorEntry title="new" op="new" example="Java-Operator-new.java" />

    </Category>

    <Category title="Other">
        <DocEntry title="cast">
            <Elements>
                <Element name="operator" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:cast">
                    <Desc>Find all casts</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-cast-1.java" />
        </DocEntry>

        <DocEntry title="import">
            <Elements>
                <Element name="import" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:import">
                    <Desc>Find all import statements</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-import-1.java" />
        </DocEntry>

        <DocEntry title="package">
            <Elements>
                <Element name="package" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:package">
                    <Desc>Find all package declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-package-1.java" />
        </DocEntry>

        <DocEntry title="synchronized statement" shortTitle="synchronized">
            <Elements>
                <Element name="synchronized" />
                <Subelement name="init"/>
                <Subelement name="block"/>
            </Elements>
            <XPathQueries>
                <XPath path="//src:synchronized">
                    <Desc>Find all synchronization statements</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-synchronized-2.java" />
        </DocEntry>
    </Category>

    <Category title="Exceptions">
        <DocEntry title="throw">
            <Elements>
                <Element name="throw" />
                <Subelement name="expr" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:throw">
                    <Desc>Find all uses of throw</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-throw.java" />
        </DocEntry>

        <DocEntry title="throws">
            <Elements>
                <Element name="throws" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:throws">
                    <Desc>Find all uses of throws</Desc>
                </XPath>
                <XPath path="//src:function[src:throws]">
                    <Desc>Find all functions with the throws specification</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-throws-1.java" />
            <Example file="Java-throws-2.java" />
            <Example file="Java-throws-3.java" />
            <Example file="Java-throws-4.java" />
        </DocEntry>

        <DocEntry title="try">
            <Elements>
                <Element name="try" />
                <Subelement name="init" />
                <Subelement name="block" />
                <Subelement name="catch" />
                <Subelement name="finally" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:try">
                    <Desc>Find all try blocks</Desc>
                </XPath>
                <XPath path="//src:try[src:init]">
                    <Desc>Find all try blocks with a resource list</Desc>
                </XPath>
                <XPath path="//src:try[src:finally][not(src:catch)]">
                    <Desc>Find all try blocks which only have a finally block</Desc>
                </XPath>
                <XPath path="//src:try[src:finally][src:catch]">
                    <Desc>Find all try blocks which have a catch and a finally block</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-try-1.java" />
            <Example file="Java-try-2.java" />
            <Example file="Java-try-3.java" />
        </DocEntry>

        <DocEntry title="catch">
            <Elements>
                <Element name="catch" />
                <Subelement name="parameter_list" />

                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:catch">
                    <Desc>Find all catch blocks</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-catch-1.java" />
            <Example file="Java-catch-2.java" />
            <Example file="Java-catch-3.java" />
        </DocEntry>

        <DocEntry title="finally">
            <Elements>
                <Element name="finally" />
                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:finally">
                    <Desc>Find all finally blocks</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-finally-1.java" />
        </DocEntry>

    </Category>

    <Category title="Generic">


        <DocEntry title="generic class definition">
            <Elements>
                <Element name="class" />
                <Subelement name="name" />
                <Subelement name="argument_list" />

                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:class[src:name/src:parameter_list]">
                    <Desc>Find all generic classes</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-generic-class-1.java" />
        </DocEntry>

        <DocEntry title="generic variable declaration">
            <Elements>
                <Element name="decl_stmt" />
                <Subelement name="decl" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:decl[src:name/src:argument_list]">
                    <Desc>Find all generic types used within variable declarations</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-generic-variable-decl-1.java" />
            <Example file="Java-generic-variable-decl-2.java" />
        </DocEntry>

        <DocEntry title="generic method definition">
            <Elements>
                <Element name="function" />
                <Subelement name="name" />
                <Subelement name="argument_list" />

                <Subelement name="parameter_list" />

                <Subelement name="block" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function[src:type/src:argument_list]">
                    <Desc>Find all generic methods</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-generic-method-def-1.java" />
        </DocEntry>

        <DocEntry title="bound generic parameter">
            <Elements>
                <Element name="extends" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:argument[src:extends]">
                    <Desc>Find all bound generic parameters</Desc>
                </XPath>
                <XPath path="//src:class[src:name/src:parameter_list/src:parameter/src:extends]">
                    <Desc>Find all classes with a bound generic parameter</Desc>
                </XPath>
                <XPath path="//src:function[src:type/src:argument_list/src:argument/src:extends]">
                    <Desc>Find all methods with a bound generic parameter</Desc>
                </XPath>
            </XPathQueries>
            <Example file="Java-bound-generic-1.java" />
            <Example file="Java-bound-generic-2.java" />
            <Example file="Java-bound-generic-3.java" />
        </DocEntry>

        <DocEntry title="generic wildcard">
            <Elements>
                <Element name="extends" />
                <Subelement name="name" />
            </Elements>
            <XPathQueries>
                <XPath path="//src:function[src:parameter_list/src:parameter/src:decl/src:type/src:name/src:argument_list/src:argument[src:name[.='?']][src:extends]]">
                    <Desc>Find all functions with a generic wildcard parameter that has an upper bound</Desc>
                </XPath>
                <XPath path="//src:function[src:parameter_list/src:parameter/src:decl/src:type/src:name/src:argument_list/src:argument[src:name[.='?']][not(src:extends)][not(src:super)]]">
                    <Desc>Find all functions with a generic wildcard parameter that is unbound</Desc>
                </XPath>
                <XPath path="//src:function[src:parameter_list/src:parameter/src:decl/src:type/src:name/src:argument_list/src:argument[src:name[.='?']][src:super]]">
                    <Desc>Find all functions with a generic wildcard parameter that has a lower</Desc>
                </XPath>
            </XPathQueries>
            <Example title="upper bound wildcard" file="Java-wildcard-1.java" />
            <Example title="unbound wildcard" file="Java-wildcard-2.java" />
            <Example title="lower bound wildcard" file="Java-wildcard-3.java" />
        </DocEntry>
    </Category>
</DocConfig>
